// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Group {
  id          Int          @id @default(autoincrement())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  parentId    Int?
  parent      Group?       @relation("Group", fields: [parentId], references: [id])
  children    Group[]      @relation("Group")
  title       String       @db.VarChar(255)
  description String       @db.Text
  memberships Membership[]
  processes   Process[]
}

model Membership {
  person    Person   @relation(fields: [personId], references: [id])
  personId  Int
  group     Group    @relation(fields: [groupId], references: [id])
  groupId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      String   @db.VarChar(255)

  @@id([personId, groupId])
}

model Person {
  id          Int          @id @default(autoincrement())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  email       String       @unique
  name        String?
  memberships Membership[]
}

model Process {
  id            Int           @id @default(autoincrement())
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  title         String        @db.VarChar(255)
  description   String        @db.Text
  group         Group         @relation(fields: [groupId], references: [id])
  groupId       Int
  uncertainties Uncertainty[]
}

model Uncertainty {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  title       String    @db.VarChar(255)
  description String    @db.Text
  type        String    @db.VarChar(255) // "risk" | "opportunity"
  impact      Float
  frequency   Float
  process     Process   @relation(fields: [processId], references: [id])
  processId   Int
  controls    Control[]
}

model Control {
  id            Int         @id @default(autoincrement())
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  title         String      @db.VarChar(255)
  description   String      @db.Text
  type          String      @db.VarChar(255) // "preventive" | "detective"
  effectiveness Float
  uncertainty   Uncertainty @relation(fields: [uncertaintyId], references: [id])
  uncertaintyId Int
}
